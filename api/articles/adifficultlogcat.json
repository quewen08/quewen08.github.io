{"title":"給你一個優雅性感的Logcat","slug":"adifficultlogcat","date":"2018-08-29T16:00:00.000Z","updated":"2022-10-19T14:40:00.238Z","comments":true,"path":"api/articles/adifficultlogcat.json","realPath":"/2018/adifficultlogcat/index/","excerpt":null,"covers":["https://ws2.sinaimg.cn/large/005Zbr7egy1fv23ngc2lqj30lc02y75s.jpg","https://ws1.sinaimg.cn/large/005Zbr7ely1fv23qqte68j31i00qidpe.jpg","https://ws4.sinaimg.cn/large/005Zbr7egy1fv23t0b7s7j31kw0pm7f3.jpg","https://ws1.sinaimg.cn/large/005Zbr7ely1fv2400cmctj31e807a78m.jpg","https://ws1.sinaimg.cn/large/005Zbr7ely1fv240wwiq2j319g0rq12m.jpg"],"cover":"https://ws2.sinaimg.cn/large/005Zbr7egy1fv23ngc2lqj30lc02y75s.jpg","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><ul>\n<li><p>Android Studio的<code>Logcat</code>显示，默认效果如下：</p>\n<p><img src=\"https://ws2.sinaimg.cn/large/005Zbr7egy1fv23ngc2lqj30lc02y75s.jpg\"></p>\n</li>\n<li><p>其实可以通过”Logcat配色”和”自定义Locat输出格式”这两个方面来着手，让Logcat性感起来。</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/005Zbr7ely1fv23qqte68j31i00qidpe.jpg\"></p>\n</li>\n</ul>\n<h2 id=\"Logcat配色\"><a href=\"#Logcat配色\" class=\"headerlink\" title=\"Logcat配色\"></a>Logcat配色</h2><ul>\n<li><p>默认只有Error和Assert是红色，其他都是灰色。</p>\n</li>\n<li><p>设置步骤</p>\n<ol>\n<li>Preferences -&gt; Editor -&gt; Colors &amp; Fonts -&gt; Android Logcat；</li>\n<li>选择要修改的日志级别，如Warning；</li>\n<li>Use inherited attributes去掉勾选；</li>\n<li>勾选Foreground，并点击后面的颜色框进行选色。</li>\n</ol>\n</li>\n</ul>\n<p><img src=\"https://ws4.sinaimg.cn/large/005Zbr7egy1fv23t0b7s7j31kw0pm7f3.jpg\"></p>\n<ul>\n<li>我本人的配色方案。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">日志级别</th>\n<th align=\"center\">色值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Verbose</td>\n<td align=\"center\">BBBBBB</td>\n</tr>\n<tr>\n<td align=\"center\">Debug</td>\n<td align=\"center\">0070BB</td>\n</tr>\n<tr>\n<td align=\"center\">Info</td>\n<td align=\"center\">48BB31</td>\n</tr>\n<tr>\n<td align=\"center\">Warn</td>\n<td align=\"center\">BBBB23</td>\n</tr>\n<tr>\n<td align=\"center\">Error</td>\n<td align=\"center\">FF0006</td>\n</tr>\n<tr>\n<td align=\"center\">Assert</td>\n<td align=\"center\">FF6B68</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://ws1.sinaimg.cn/large/005Zbr7ely1fv2400cmctj31e807a78m.jpg\"></p>\n<h2 id=\"自定义Logcat输出格式\"><a href=\"#自定义Logcat输出格式\" class=\"headerlink\" title=\"自定义Logcat输出格式\"></a>自定义Logcat输出格式</h2><p>借助开源库logger来自定义Logcat输出格式。</p>\n<p>先上效果图。</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/005Zbr7ely1fv240wwiq2j319g0rq12m.jpg\"></p>\n<p>使用方法</p>\n<ol>\n<li><p>添加依赖：<code>compile &#39;com.orhanobut:logger:1.8&#39;</code>。</p>\n</li>\n<li><p><code>Logger</code>的初始化配置，最好写在自定义<code>Application</code>类的<code>onCreate()</code>中。</p>\n</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Logger.init(<span class=\"string\">&quot;Daking&quot;</span>) <span class=\"comment\">// TAG</span></span><br><span class=\"line\">\t.setMethodCount(<span class=\"number\">3</span>) <span class=\"comment\">// 打印位置显示的方法调用栈的方法数,默认为2</span></span><br><span class=\"line\">\t.hideThreadInfo(); <span class=\"comment\">// 隐藏线程信息,默认为显示.</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>输出日志。</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Logger.v(<span class=\"string\">&quot;Logger.v&quot;</span>); <span class=\"comment\">// Verbose级别</span></span><br><span class=\"line\">Logger.d(<span class=\"string\">&quot;Logger.d&quot;</span>); <span class=\"comment\">// Debug级别</span></span><br><span class=\"line\">Logger.i(<span class=\"string\">&quot;Logger.i&quot;</span>); <span class=\"comment\">// Info级别</span></span><br><span class=\"line\">Logger.w(<span class=\"string\">&quot;Logger.w&quot;</span>); <span class=\"comment\">// Warn级别</span></span><br><span class=\"line\">Logger.e(<span class=\"string\">&quot;Logger.e&quot;</span>); <span class=\"comment\">// Error级别</span></span><br><span class=\"line\">Logger.wtf(<span class=\"string\">&quot;Logger.wtf&quot;</span>); <span class=\"comment\">// Error级别</span></span><br><span class=\"line\">Logger.json(<span class=\"string\">&quot;&#123;\\&quot;name\\&quot;:\\&quot;value\\&quot;&#125;&quot;</span>); <span class=\"comment\">// 打印json，Debug级别</span></span><br></pre></td></tr></table></figure>\n\n<p>本文摘自<a href=\"http://daking.tech/2016/09/26/%E7%BB%99%E4%BD%A0%E4%B8%80%E4%B8%AA%E4%BC%98%E9%9B%85%E6%80%A7%E6%84%9F%E7%9A%84Logcat/\">【给你一个优雅性感的Logcat】</a></p>\n","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><ul>\n<li><p>Android Studio的<code>Logcat</code>显示，默认效果如下：</p>\n<p><img src=\"https://ws2.sinaimg.cn/large/005Zbr7egy1fv23ngc2lqj30lc02y75s.jpg\"></p>\n</li>\n<li><p>其实可以通过”Logcat配色”和”自定义Locat输出格式”这两个方面来着手，让Logcat性感起来。</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/005Zbr7ely1fv23qqte68j31i00qidpe.jpg\"></p>\n</li>\n</ul>\n<h2 id=\"Logcat配色\"><a href=\"#Logcat配色\" class=\"headerlink\" title=\"Logcat配色\"></a>Logcat配色</h2><ul>\n<li><p>默认只有Error和Assert是红色，其他都是灰色。</p>\n</li>\n<li><p>设置步骤</p>\n<ol>\n<li>Preferences -&gt; Editor -&gt; Colors &amp; Fonts -&gt; Android Logcat；</li>\n<li>选择要修改的日志级别，如Warning；</li>\n<li>Use inherited attributes去掉勾选；</li>\n<li>勾选Foreground，并点击后面的颜色框进行选色。</li>\n</ol>\n</li>\n</ul>\n<p><img src=\"https://ws4.sinaimg.cn/large/005Zbr7egy1fv23t0b7s7j31kw0pm7f3.jpg\"></p>\n<ul>\n<li>我本人的配色方案。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">日志级别</th>\n<th align=\"center\">色值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Verbose</td>\n<td align=\"center\">BBBBBB</td>\n</tr>\n<tr>\n<td align=\"center\">Debug</td>\n<td align=\"center\">0070BB</td>\n</tr>\n<tr>\n<td align=\"center\">Info</td>\n<td align=\"center\">48BB31</td>\n</tr>\n<tr>\n<td align=\"center\">Warn</td>\n<td align=\"center\">BBBB23</td>\n</tr>\n<tr>\n<td align=\"center\">Error</td>\n<td align=\"center\">FF0006</td>\n</tr>\n<tr>\n<td align=\"center\">Assert</td>\n<td align=\"center\">FF6B68</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://ws1.sinaimg.cn/large/005Zbr7ely1fv2400cmctj31e807a78m.jpg\"></p>\n<h2 id=\"自定义Logcat输出格式\"><a href=\"#自定义Logcat输出格式\" class=\"headerlink\" title=\"自定义Logcat输出格式\"></a>自定义Logcat输出格式</h2><p>借助开源库logger来自定义Logcat输出格式。</p>\n<p>先上效果图。</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/005Zbr7ely1fv240wwiq2j319g0rq12m.jpg\"></p>\n<p>使用方法</p>\n<ol>\n<li><p>添加依赖：<code>compile &#39;com.orhanobut:logger:1.8&#39;</code>。</p>\n</li>\n<li><p><code>Logger</code>的初始化配置，最好写在自定义<code>Application</code>类的<code>onCreate()</code>中。</p>\n</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Logger.init(<span class=\"string\">&quot;Daking&quot;</span>) <span class=\"comment\">// TAG</span></span><br><span class=\"line\">\t.setMethodCount(<span class=\"number\">3</span>) <span class=\"comment\">// 打印位置显示的方法调用栈的方法数,默认为2</span></span><br><span class=\"line\">\t.hideThreadInfo(); <span class=\"comment\">// 隐藏线程信息,默认为显示.</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>输出日志。</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Logger.v(<span class=\"string\">&quot;Logger.v&quot;</span>); <span class=\"comment\">// Verbose级别</span></span><br><span class=\"line\">Logger.d(<span class=\"string\">&quot;Logger.d&quot;</span>); <span class=\"comment\">// Debug级别</span></span><br><span class=\"line\">Logger.i(<span class=\"string\">&quot;Logger.i&quot;</span>); <span class=\"comment\">// Info级别</span></span><br><span class=\"line\">Logger.w(<span class=\"string\">&quot;Logger.w&quot;</span>); <span class=\"comment\">// Warn级别</span></span><br><span class=\"line\">Logger.e(<span class=\"string\">&quot;Logger.e&quot;</span>); <span class=\"comment\">// Error级别</span></span><br><span class=\"line\">Logger.wtf(<span class=\"string\">&quot;Logger.wtf&quot;</span>); <span class=\"comment\">// Error级别</span></span><br><span class=\"line\">Logger.json(<span class=\"string\">&quot;&#123;\\&quot;name\\&quot;:\\&quot;value\\&quot;&#125;&quot;</span>); <span class=\"comment\">// 打印json，Debug级别</span></span><br></pre></td></tr></table></figure>\n\n<p>本文摘自<a href=\"http://daking.tech/2016/09/26/%E7%BB%99%E4%BD%A0%E4%B8%80%E4%B8%AA%E4%BC%98%E9%9B%85%E6%80%A7%E6%84%9F%E7%9A%84Logcat/\">【给你一个优雅性感的Logcat】</a></p>\n","categories":[{"name":"学习记录","path":"api/categories/学习记录.json"},{"name":"Android","path":"api/categories/Android.json"}],"tags":[{"name":"Android","path":"api/tags/Android.json"},{"name":"学习记录","path":"api/tags/学习记录.json"}]}