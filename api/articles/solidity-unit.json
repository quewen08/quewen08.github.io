{"title":"智能合约语言 Solidity 教程系列7 - 以太单位及时间单位","slug":"solidity-unit","date":"2018-03-14T16:00:00.000Z","updated":"2022-10-19T14:40:00.267Z","comments":true,"path":"api/articles/solidity-unit.json","realPath":"/2018/solidity-unit/solidity-unit/","excerpt":null,"covers":null,"cover":null,"content":"<p>智能合约语言 Solidity 教程系列7 - 以太单位及时间单位<br>这是Solidity教程系列文章第7篇介绍以太单位及时间单位，系列带你全面深入理解Solidity语言。<br>Solidity 系列完整的文章列表请查看<a href=\"/categories/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%8C%BA%E5%9D%97%E9%93%BE/%E4%BB%A5%E5%A4%AA%E5%9D%8A/Solidity/\">分类-Solidity</a>。</p>\n<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>Solidity是以太坊智能合约编程语言，阅读本文前，你应该对以太坊、智能合约有所了解，<br>如果你还不了解，建议你先看<a href=\"/posts/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%8C%BA%E5%9D%97%E9%93%BE/%E4%BB%A5%E5%A4%AA%E5%9D%8A/2018-02-22-whatiseth.html\">以太坊是什么</a></p>\n<p>本文前半部分是参考Solidity官方文档（当前最新版本：0.4.20）进行翻译，后半部分是结合实际合约代码实例说明类型的使用（仅针对专栏订阅用户）。</p>\n<h2 id=\"货币单位-Ether-Units\"><a href=\"#货币单位-Ether-Units\" class=\"headerlink\" title=\"货币单位(Ether Units)\"></a>货币单位(Ether Units)</h2><p>一个数字常量（字面量）后面跟随一个后缀wei, finney,szabo或ether，这个后缀就是货币单位。不同的单位可以转换。不含任何后缀的默认单位是wei。<br>不同的以太币单位转换关系如下：</p>\n<ul>\n<li>1 ether &#x3D;&#x3D; 10^3 finney &#x3D;&#x3D; 1000 finney</li>\n<li>1 ether &#x3D;&#x3D; 10^6 szabo</li>\n<li>1 ether &#x3D;&#x3D; 10^18 wei</li>\n</ul>\n<blockquote>\n<p>插曲：以太币单位其实是密码学家的名字，是以太坊创始人为了纪念他们在数字货币的领域的贡献。他们分别是：<br>wei: Wei Dai 戴伟 密码学家 ，发表 B-money<br>finney: Hal Finney 芬尼 密码学家、工作量证明机制（POW）提出<br>szabo: Nick Szabo 尼克萨博 密码学家、智能合约的提出者</p>\n</blockquote>\n<p>我们可以使用一下代码验证一个转换关系：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pragma solidity ^0.4.16;</span><br><span class=\"line\"></span><br><span class=\"line\">contract testUnit &#123;</span><br><span class=\"line\">    function tf() public pure returns (bool) &#123;</span><br><span class=\"line\">      if (1 ether == 1000 finney)&#123;</span><br><span class=\"line\">          return true;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function ts() public pure returns (bool) &#123;</span><br><span class=\"line\">      if (1 ether == 1000000 szabo)&#123;</span><br><span class=\"line\">          return true;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function tgw() public pure returns (bool) &#123;</span><br><span class=\"line\">      if (1 ether == 1000000000000000000 wei)&#123;</span><br><span class=\"line\">          return true;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"时间单位-Time-Units\"><a href=\"#时间单位-Time-Units\" class=\"headerlink\" title=\"时间单位(Time Units)\"></a>时间单位(Time Units)</h2><p>时间单位: seconds, minutes, hours, days, weeks, years均可做为后缀，并进行相互转换，规则如下：</p>\n<ul>\n<li>1 &#x3D;&#x3D; 1 seconds (默认是seconds为单位)</li>\n<li>1 minutes &#x3D;&#x3D; 60 seconds</li>\n<li>1 hours &#x3D;&#x3D; 60 minutes</li>\n<li>1 days &#x3D;&#x3D; 24 hours</li>\n<li>1 weeks &#x3D; 7 days</li>\n<li>1 years &#x3D; 365 days</li>\n</ul>\n<p>使用这些单位进行日期计算需要特别小心，因为不是每年都是365天，且并不是每天都有24小时，因为还有闰秒。由于无法预测闰秒，必须由外部的预言（oracle）来更新从而得到一个精确的日历库。</p>\n<p>这些后缀不能用于变量。如果想对输入的变量说明其不同的单位，可以使用下面的方式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pragma solidity ^0.4.16;</span><br><span class=\"line\"></span><br><span class=\"line\">contract testTUnit &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    function currTimeInSeconds() public pure returns (uint256)&#123;</span><br><span class=\"line\">        return now;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function f(uint start, uint daysAfter) public &#123;</span><br><span class=\"line\">        if (now &gt;= start + daysAfter * 1 days) &#123;</span><br><span class=\"line\">        // ...</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p><a href=\"https://solidity.readthedocs.io/en/develop/units-and-global-variables.html#units-and-globally-available-variables\">units</a></p>\n","more":"<p>智能合约语言 Solidity 教程系列7 - 以太单位及时间单位<br>这是Solidity教程系列文章第7篇介绍以太单位及时间单位，系列带你全面深入理解Solidity语言。<br>Solidity 系列完整的文章列表请查看<a href=\"/categories/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%8C%BA%E5%9D%97%E9%93%BE/%E4%BB%A5%E5%A4%AA%E5%9D%8A/Solidity/\">分类-Solidity</a>。</p>\n<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>Solidity是以太坊智能合约编程语言，阅读本文前，你应该对以太坊、智能合约有所了解，<br>如果你还不了解，建议你先看<a href=\"/posts/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%8C%BA%E5%9D%97%E9%93%BE/%E4%BB%A5%E5%A4%AA%E5%9D%8A/2018-02-22-whatiseth.html\">以太坊是什么</a></p>\n<p>本文前半部分是参考Solidity官方文档（当前最新版本：0.4.20）进行翻译，后半部分是结合实际合约代码实例说明类型的使用（仅针对专栏订阅用户）。</p>\n<h2 id=\"货币单位-Ether-Units\"><a href=\"#货币单位-Ether-Units\" class=\"headerlink\" title=\"货币单位(Ether Units)\"></a>货币单位(Ether Units)</h2><p>一个数字常量（字面量）后面跟随一个后缀wei, finney,szabo或ether，这个后缀就是货币单位。不同的单位可以转换。不含任何后缀的默认单位是wei。<br>不同的以太币单位转换关系如下：</p>\n<ul>\n<li>1 ether &#x3D;&#x3D; 10^3 finney &#x3D;&#x3D; 1000 finney</li>\n<li>1 ether &#x3D;&#x3D; 10^6 szabo</li>\n<li>1 ether &#x3D;&#x3D; 10^18 wei</li>\n</ul>\n<blockquote>\n<p>插曲：以太币单位其实是密码学家的名字，是以太坊创始人为了纪念他们在数字货币的领域的贡献。他们分别是：<br>wei: Wei Dai 戴伟 密码学家 ，发表 B-money<br>finney: Hal Finney 芬尼 密码学家、工作量证明机制（POW）提出<br>szabo: Nick Szabo 尼克萨博 密码学家、智能合约的提出者</p>\n</blockquote>\n<p>我们可以使用一下代码验证一个转换关系：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pragma solidity ^0.4.16;</span><br><span class=\"line\"></span><br><span class=\"line\">contract testUnit &#123;</span><br><span class=\"line\">    function tf() public pure returns (bool) &#123;</span><br><span class=\"line\">      if (1 ether == 1000 finney)&#123;</span><br><span class=\"line\">          return true;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function ts() public pure returns (bool) &#123;</span><br><span class=\"line\">      if (1 ether == 1000000 szabo)&#123;</span><br><span class=\"line\">          return true;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function tgw() public pure returns (bool) &#123;</span><br><span class=\"line\">      if (1 ether == 1000000000000000000 wei)&#123;</span><br><span class=\"line\">          return true;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"时间单位-Time-Units\"><a href=\"#时间单位-Time-Units\" class=\"headerlink\" title=\"时间单位(Time Units)\"></a>时间单位(Time Units)</h2><p>时间单位: seconds, minutes, hours, days, weeks, years均可做为后缀，并进行相互转换，规则如下：</p>\n<ul>\n<li>1 &#x3D;&#x3D; 1 seconds (默认是seconds为单位)</li>\n<li>1 minutes &#x3D;&#x3D; 60 seconds</li>\n<li>1 hours &#x3D;&#x3D; 60 minutes</li>\n<li>1 days &#x3D;&#x3D; 24 hours</li>\n<li>1 weeks &#x3D; 7 days</li>\n<li>1 years &#x3D; 365 days</li>\n</ul>\n<p>使用这些单位进行日期计算需要特别小心，因为不是每年都是365天，且并不是每天都有24小时，因为还有闰秒。由于无法预测闰秒，必须由外部的预言（oracle）来更新从而得到一个精确的日历库。</p>\n<p>这些后缀不能用于变量。如果想对输入的变量说明其不同的单位，可以使用下面的方式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pragma solidity ^0.4.16;</span><br><span class=\"line\"></span><br><span class=\"line\">contract testTUnit &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    function currTimeInSeconds() public pure returns (uint256)&#123;</span><br><span class=\"line\">        return now;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function f(uint start, uint daysAfter) public &#123;</span><br><span class=\"line\">        if (now &gt;= start + daysAfter * 1 days) &#123;</span><br><span class=\"line\">        // ...</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p><a href=\"https://solidity.readthedocs.io/en/develop/units-and-global-variables.html#units-and-globally-available-variables\">units</a></p>\n","categories":[{"name":"学习记录","path":"api/categories/学习记录.json"},{"name":"区块链","path":"api/categories/区块链.json"},{"name":"以太坊","path":"api/categories/以太坊.json"}],"tags":[{"name":"Solidity手册","path":"api/tags/Solidity手册.json"}]}