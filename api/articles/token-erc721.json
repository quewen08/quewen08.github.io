{"title":"剖析非同质化代币ERC721-全面解析ERC721标准","slug":"token-erc721","date":"2018-03-23T04:02:22.000Z","updated":"2022-10-19T14:40:00.272Z","comments":true,"path":"api/articles/token-erc721.json","realPath":"/2018/token-erc721/index/","excerpt":null,"covers":null,"cover":null,"content":"<p>什么是ERC-721？现在我们看到的各种加密猫猫狗狗都是基于ERC-721创造出来的，每只都是一个独一无二的ERC-721代币，不过ERC-721在区块链世界远不止猫猫狗狗，它更大的想象空间在于将物理世界的资产映射到区块链上。本文就来剖析下什么是ERC721.</p>\n<h2 id=\"ERC721是什么\"><a href=\"#ERC721是什么\" class=\"headerlink\" title=\"ERC721是什么\"></a>ERC721是什么</h2><p>在<a href=\"/posts/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%8C%BA%E5%9D%97%E9%93%BE/%E4%BB%A5%E5%A4%AA%E5%9D%8A/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/2018-03-08-create_token.html\">创建代币</a>一篇，我们讲到过ERC20代币，<br>和ERC20一样，ERC721同样是一个代币标准，ERC721官方简要解释是Non-Fungible Tokens，简写为NFTs，多翻译为非同质代币。</p>\n<blockquote>\n<p>ERC721 是由Dieter Shirley 在2017年9月提出。Dieter Shirley 正是谜恋猫CryptoKitties背后的公司Axiom Zen的技术总监。因此谜恋猫也是第一个实现了ERC721 标准的去中心化应用。ERC721号提议已经被以太坊作为标准接受，但该标准仍处于草稿阶段。本文介绍的ERC721标准基于最新(2018&#x2F;03&#x2F;23官方提议。</p>\n</blockquote>\n<p>那怎么理解__非同质__ 代币呢?</p>\n<p>非同质代表独一无二，谜恋猫为例，每只猫都被赋予拥有基因，是独一无二的（一只猫就是一个NFTs），猫之间是不能置换的。这种独特性使得某些稀有猫具有收藏价值，也因此受到追捧。</p>\n<p>ERC20代币是可置换的，且可细分为N份（1 &#x3D; 10 * 0.1）, 而ERC721的Token最小的单位为1，无法再分割。</p>\n<blockquote>\n<p>如果同一个集合的两个物品具有不同的特征，这两个物品是非同质的，而同质是某个部分或数量可以被另一个同等部分或数量所代替。</p>\n</blockquote>\n<p>非同质性其实广泛存在于我们的生活中，如图书馆的每一本，宠物商店的每一只宠物，歌手所演唱的歌曲，花店里不同的花等等，因此ERC721合约必定有广泛的应用场景。通过这样一个标准，也可建立跨功能的NFTs管理和销售平台（就像有支持ERC20的交易所和钱包一样），使生态更加强大。</p>\n<h2 id=\"ERC721标准\"><a href=\"#ERC721标准\" class=\"headerlink\" title=\"ERC721标准\"></a>ERC721标准</h2><p>ERC721最为一个合约标准，提供了在实现ERC721代币时必须要遵守的协议，要求每个ERC721标准合约需要实现ERC721及ERC165接口，接口定义如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pragma solidity ^0.4.20;</span><br><span class=\"line\"></span><br><span class=\"line\">interface ERC721 /* is ERC165 */ &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    event Transfer(address indexed _from, address indexed _to, uint256 _tokenId);</span><br><span class=\"line\">    event Approval(address indexed _owner, address indexed _approved, uint256 _tokenId);</span><br><span class=\"line\">    event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);</span><br><span class=\"line\"></span><br><span class=\"line\">    function balanceOf(address _owner) external view returns (uint256);</span><br><span class=\"line\">    function ownerOf(uint256 _tokenId) external view returns (address);</span><br><span class=\"line\"></span><br><span class=\"line\">    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes data) external payable;</span><br><span class=\"line\">    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable;</span><br><span class=\"line\">    function transferFrom(address _from, address _to, uint256 _tokenId) external payable;</span><br><span class=\"line\"></span><br><span class=\"line\">    function approve(address _approved, uint256 _tokenId) external payable;</span><br><span class=\"line\">    function setApprovalForAll(address _operator, bool _approved) external;</span><br><span class=\"line\">    function getApproved(uint256 _tokenId) external view returns (address);</span><br><span class=\"line\">    function isApprovedForAll(address _owner, address _operator) external view returns (bool);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>接口说明：</p>\n<ul>\n<li><p>balanceOf(): 返回由_owner 持有的NFTs的数量。</p>\n</li>\n<li><p>ownerOf(): 返回tokenId代币持有者的地址。</p>\n</li>\n<li><p>approve(): 授予地址_to具有_tokenId的控制权，方法成功后需触发Approval 事件。</p>\n</li>\n<li><p>setApprovalForAll(): 授予地址_operator具有所有NFTs的控制权，成功后需触发ApprovalForAll事件。</p>\n</li>\n<li><p>getApproved()、isApprovedForAll(): 用来查询授权。</p>\n</li>\n<li><p>safeTransferFrom(): 转移NFT所有权，一次成功的转移操作必须发起 Transer 事件。函数的实现需要做一下几种检查：</p>\n</li>\n</ul>\n<ol>\n<li>调用者msg.sender应该是当前tokenId的所有者或被授权的地址</li>\n<li>_from 必须是 _tokenId的所有者</li>\n<li>_tokenId 应该是当前合约正在监测的NFTs 中的任何一个</li>\n<li>_to 地址不应该为 0</li>\n<li>如果_to 是一个合约应该调用其onERC721Received方法, 并且检查其返回值，如果返回值不为<code>bytes4(keccak256(&quot;onERC721Received(address,uint256,bytes)&quot;))</code>抛出异常。</li>\n</ol>\n<pre><code>一个可接收NFT的合约必须实现ERC721TokenReceiver接口：\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface ERC721TokenReceiver &#123;</span><br><span class=\"line\">/// @return `bytes4(keccak256(&quot;onERC721Received(address,uint256,bytes)&quot;))`</span><br><span class=\"line\">  function onERC721Received(address _from, uint256 _tokenId, bytes data) external returns(bytes4);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</code></pre>\n<ul>\n<li>transferFrom(): 用来转移NFTs, 方法成功后需触发Transfer事件。调用者自己确认_to地址能正常接收NFT，否则将丢失此NFT。此函数实现时需要检查上面条件的前4条。</li>\n</ul>\n<h2 id=\"ERC165标准\"><a href=\"#ERC165标准\" class=\"headerlink\" title=\"ERC165标准\"></a>ERC165标准</h2><p>ERC721标准同时要求必须符合ERC165标准 ，其接口如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface ERC165 &#123;</span><br><span class=\"line\">    function supportsInterface(bytes4 interfaceID) external view returns (bool);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md\">ERC165</a>同样是一个合约标准，这个标准要求合约提供其实现了哪些接口，这样再与合约进行交互的时候可以先调用此接口进行查询。<br>interfaceID为函数选择器，计算方式有两种，如：<code>bytes4(keccak256(&#39;supportsInterface(bytes4)&#39;));</code>或<code>ERC165.supportsInterface.selector</code>，多个函数的接口ID为函数选择器的异或值。<br>关于ERC165，这里不深入介绍，有兴趣的同学可以阅读<a href=\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md\">官方提案</a>。</p>\n<h3 id=\"可选实现接口：ERC721Metadata\"><a href=\"#可选实现接口：ERC721Metadata\" class=\"headerlink\" title=\"可选实现接口：ERC721Metadata\"></a>可选实现接口：ERC721Metadata</h3><p>ERC721Metadata 接口用于提供合约的元数据：name , symbol 及 URI（NFT所对应的资源）。<br>其接口定义如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface ERC721Metadata /* is ERC721 */ &#123;</span><br><span class=\"line\">    function name() external pure returns (string _name);</span><br><span class=\"line\">    function symbol() external pure returns (string _symbol);</span><br><span class=\"line\">    function tokenURI(uint256 _tokenId) external view returns (string);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>接口说明:</strong></p>\n<ul>\n<li><p>name(): 返回合约的名字，尽管是可选，但强烈建议实现，即便是返回空字符串。</p>\n</li>\n<li><p>symbol(): 返回合约代币符号，尽管是可选，但强烈建议实现，即便是返回空字符串。</p>\n</li>\n<li><p>tokenURI(): 返回_tokenId所对应的外部资源文件的URI(通常是IPFS或HTTP(S)路径)。外部资源文件需要包含名字、描述、图片，其格式的要求如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"><span class=\"attr\">&quot;title&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Asset Metadata&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;object&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;properties&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;string&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Identifies the asset to which this NFT represents&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;string&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Describes the asset to which this NFT represents&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;image&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;string&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;A URI pointing to a resource with mime type image/* representing the asset to which this NFT represents. Consider making any images at a width between 320 and 1080 pixels and aspect ratio between 1.91:1 and 4:5 inclusive.&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>  tokenURI通常是被web3调用，以便在应用层做相应的查询和展示。</p>\n<h3 id=\"可选实现接口：ERC721Enumerable\"><a href=\"#可选实现接口：ERC721Enumerable\" class=\"headerlink\" title=\"可选实现接口：ERC721Enumerable\"></a>可选实现接口：ERC721Enumerable</h3><p>ERC721Enumerable的主要目的是提高合约中NTF的可访问性，其接口定义如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface ERC721Enumerable /* is ERC721 */ &#123;</span><br><span class=\"line\">    function totalSupply() external view returns (uint256);</span><br><span class=\"line\">    function tokenByIndex(uint256 _index) external view returns (uint256);</span><br><span class=\"line\">    function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>接口说明:</strong></p>\n<ul>\n<li>totalSupply(): 返回NFT总量</li>\n<li>tokenByIndex(): 通过索引返回对应的tokenId。</li>\n<li>tokenOfOwnerByIndex(): 所有者可以一次拥有多个的NFT, 此函数返回_owner拥有的NFT列表中对应索引的tokenId。</li>\n</ul>\n<h2 id=\"补充说明\"><a href=\"#补充说明\" class=\"headerlink\" title=\"补充说明\"></a>补充说明</h2><h3 id=\"NTF-IDs\"><a href=\"#NTF-IDs\" class=\"headerlink\" title=\"NTF IDs\"></a>NTF IDs</h3><p>NTF ID，即tokenId，在合约中用唯一的uint265进行标识，每个NFT的ID在智能合约的生命周期内不允许改变。推荐的实现方式有：</p>\n<ol>\n<li>从0开始，每新加一个NFT，NTF ID加1</li>\n<li>使用sha3后uuid转换为NTF ID</li>\n</ol>\n<h3 id=\"与ERC-20的兼容性\"><a href=\"#与ERC-20的兼容性\" class=\"headerlink\" title=\"与ERC-20的兼容性\"></a>与ERC-20的兼容性</h3><p>ERC721标准尽可能遵循 ERC-20 的语义，但由于同质代币与非同质代币之间的根本差异，并不能完全兼容ERC-20。</p>\n<h3 id=\"交易、挖矿、销毁\"><a href=\"#交易、挖矿、销毁\" class=\"headerlink\" title=\"交易、挖矿、销毁\"></a>交易、挖矿、销毁</h3><p>在实现transter相关接口时除了满足上面的的条件外，我们可以根据需要添加自己的逻辑，如加入黑名单等。<br>同时挖矿、销毁尽管不是标准的一部分，我们可以根据需要实现。</p>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ul>\n<li><a href=\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md\">EIPS-165</a></li>\n<li><a href=\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\">EIPS-721</a></li>\n</ul>\n","more":"<p>什么是ERC-721？现在我们看到的各种加密猫猫狗狗都是基于ERC-721创造出来的，每只都是一个独一无二的ERC-721代币，不过ERC-721在区块链世界远不止猫猫狗狗，它更大的想象空间在于将物理世界的资产映射到区块链上。本文就来剖析下什么是ERC721.</p>\n<h2 id=\"ERC721是什么\"><a href=\"#ERC721是什么\" class=\"headerlink\" title=\"ERC721是什么\"></a>ERC721是什么</h2><p>在<a href=\"/posts/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E5%8C%BA%E5%9D%97%E9%93%BE/%E4%BB%A5%E5%A4%AA%E5%9D%8A/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/2018-03-08-create_token.html\">创建代币</a>一篇，我们讲到过ERC20代币，<br>和ERC20一样，ERC721同样是一个代币标准，ERC721官方简要解释是Non-Fungible Tokens，简写为NFTs，多翻译为非同质代币。</p>\n<blockquote>\n<p>ERC721 是由Dieter Shirley 在2017年9月提出。Dieter Shirley 正是谜恋猫CryptoKitties背后的公司Axiom Zen的技术总监。因此谜恋猫也是第一个实现了ERC721 标准的去中心化应用。ERC721号提议已经被以太坊作为标准接受，但该标准仍处于草稿阶段。本文介绍的ERC721标准基于最新(2018&#x2F;03&#x2F;23官方提议。</p>\n</blockquote>\n<p>那怎么理解__非同质__ 代币呢?</p>\n<p>非同质代表独一无二，谜恋猫为例，每只猫都被赋予拥有基因，是独一无二的（一只猫就是一个NFTs），猫之间是不能置换的。这种独特性使得某些稀有猫具有收藏价值，也因此受到追捧。</p>\n<p>ERC20代币是可置换的，且可细分为N份（1 &#x3D; 10 * 0.1）, 而ERC721的Token最小的单位为1，无法再分割。</p>\n<blockquote>\n<p>如果同一个集合的两个物品具有不同的特征，这两个物品是非同质的，而同质是某个部分或数量可以被另一个同等部分或数量所代替。</p>\n</blockquote>\n<p>非同质性其实广泛存在于我们的生活中，如图书馆的每一本，宠物商店的每一只宠物，歌手所演唱的歌曲，花店里不同的花等等，因此ERC721合约必定有广泛的应用场景。通过这样一个标准，也可建立跨功能的NFTs管理和销售平台（就像有支持ERC20的交易所和钱包一样），使生态更加强大。</p>\n<h2 id=\"ERC721标准\"><a href=\"#ERC721标准\" class=\"headerlink\" title=\"ERC721标准\"></a>ERC721标准</h2><p>ERC721最为一个合约标准，提供了在实现ERC721代币时必须要遵守的协议，要求每个ERC721标准合约需要实现ERC721及ERC165接口，接口定义如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pragma solidity ^0.4.20;</span><br><span class=\"line\"></span><br><span class=\"line\">interface ERC721 /* is ERC165 */ &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    event Transfer(address indexed _from, address indexed _to, uint256 _tokenId);</span><br><span class=\"line\">    event Approval(address indexed _owner, address indexed _approved, uint256 _tokenId);</span><br><span class=\"line\">    event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);</span><br><span class=\"line\"></span><br><span class=\"line\">    function balanceOf(address _owner) external view returns (uint256);</span><br><span class=\"line\">    function ownerOf(uint256 _tokenId) external view returns (address);</span><br><span class=\"line\"></span><br><span class=\"line\">    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes data) external payable;</span><br><span class=\"line\">    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable;</span><br><span class=\"line\">    function transferFrom(address _from, address _to, uint256 _tokenId) external payable;</span><br><span class=\"line\"></span><br><span class=\"line\">    function approve(address _approved, uint256 _tokenId) external payable;</span><br><span class=\"line\">    function setApprovalForAll(address _operator, bool _approved) external;</span><br><span class=\"line\">    function getApproved(uint256 _tokenId) external view returns (address);</span><br><span class=\"line\">    function isApprovedForAll(address _owner, address _operator) external view returns (bool);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>接口说明：</p>\n<ul>\n<li><p>balanceOf(): 返回由_owner 持有的NFTs的数量。</p>\n</li>\n<li><p>ownerOf(): 返回tokenId代币持有者的地址。</p>\n</li>\n<li><p>approve(): 授予地址_to具有_tokenId的控制权，方法成功后需触发Approval 事件。</p>\n</li>\n<li><p>setApprovalForAll(): 授予地址_operator具有所有NFTs的控制权，成功后需触发ApprovalForAll事件。</p>\n</li>\n<li><p>getApproved()、isApprovedForAll(): 用来查询授权。</p>\n</li>\n<li><p>safeTransferFrom(): 转移NFT所有权，一次成功的转移操作必须发起 Transer 事件。函数的实现需要做一下几种检查：</p>\n</li>\n</ul>\n<ol>\n<li>调用者msg.sender应该是当前tokenId的所有者或被授权的地址</li>\n<li>_from 必须是 _tokenId的所有者</li>\n<li>_tokenId 应该是当前合约正在监测的NFTs 中的任何一个</li>\n<li>_to 地址不应该为 0</li>\n<li>如果_to 是一个合约应该调用其onERC721Received方法, 并且检查其返回值，如果返回值不为<code>bytes4(keccak256(&quot;onERC721Received(address,uint256,bytes)&quot;))</code>抛出异常。</li>\n</ol>\n<pre><code>一个可接收NFT的合约必须实现ERC721TokenReceiver接口：\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface ERC721TokenReceiver &#123;</span><br><span class=\"line\">/// @return `bytes4(keccak256(&quot;onERC721Received(address,uint256,bytes)&quot;))`</span><br><span class=\"line\">  function onERC721Received(address _from, uint256 _tokenId, bytes data) external returns(bytes4);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</code></pre>\n<ul>\n<li>transferFrom(): 用来转移NFTs, 方法成功后需触发Transfer事件。调用者自己确认_to地址能正常接收NFT，否则将丢失此NFT。此函数实现时需要检查上面条件的前4条。</li>\n</ul>\n<h2 id=\"ERC165标准\"><a href=\"#ERC165标准\" class=\"headerlink\" title=\"ERC165标准\"></a>ERC165标准</h2><p>ERC721标准同时要求必须符合ERC165标准 ，其接口如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface ERC165 &#123;</span><br><span class=\"line\">    function supportsInterface(bytes4 interfaceID) external view returns (bool);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md\">ERC165</a>同样是一个合约标准，这个标准要求合约提供其实现了哪些接口，这样再与合约进行交互的时候可以先调用此接口进行查询。<br>interfaceID为函数选择器，计算方式有两种，如：<code>bytes4(keccak256(&#39;supportsInterface(bytes4)&#39;));</code>或<code>ERC165.supportsInterface.selector</code>，多个函数的接口ID为函数选择器的异或值。<br>关于ERC165，这里不深入介绍，有兴趣的同学可以阅读<a href=\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md\">官方提案</a>。</p>\n<h3 id=\"可选实现接口：ERC721Metadata\"><a href=\"#可选实现接口：ERC721Metadata\" class=\"headerlink\" title=\"可选实现接口：ERC721Metadata\"></a>可选实现接口：ERC721Metadata</h3><p>ERC721Metadata 接口用于提供合约的元数据：name , symbol 及 URI（NFT所对应的资源）。<br>其接口定义如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface ERC721Metadata /* is ERC721 */ &#123;</span><br><span class=\"line\">    function name() external pure returns (string _name);</span><br><span class=\"line\">    function symbol() external pure returns (string _symbol);</span><br><span class=\"line\">    function tokenURI(uint256 _tokenId) external view returns (string);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>接口说明:</strong></p>\n<ul>\n<li><p>name(): 返回合约的名字，尽管是可选，但强烈建议实现，即便是返回空字符串。</p>\n</li>\n<li><p>symbol(): 返回合约代币符号，尽管是可选，但强烈建议实现，即便是返回空字符串。</p>\n</li>\n<li><p>tokenURI(): 返回_tokenId所对应的外部资源文件的URI(通常是IPFS或HTTP(S)路径)。外部资源文件需要包含名字、描述、图片，其格式的要求如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"><span class=\"attr\">&quot;title&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Asset Metadata&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;object&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;properties&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;string&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Identifies the asset to which this NFT represents&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;string&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Describes the asset to which this NFT represents&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;image&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;string&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;A URI pointing to a resource with mime type image/* representing the asset to which this NFT represents. Consider making any images at a width between 320 and 1080 pixels and aspect ratio between 1.91:1 and 4:5 inclusive.&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>  tokenURI通常是被web3调用，以便在应用层做相应的查询和展示。</p>\n<h3 id=\"可选实现接口：ERC721Enumerable\"><a href=\"#可选实现接口：ERC721Enumerable\" class=\"headerlink\" title=\"可选实现接口：ERC721Enumerable\"></a>可选实现接口：ERC721Enumerable</h3><p>ERC721Enumerable的主要目的是提高合约中NTF的可访问性，其接口定义如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface ERC721Enumerable /* is ERC721 */ &#123;</span><br><span class=\"line\">    function totalSupply() external view returns (uint256);</span><br><span class=\"line\">    function tokenByIndex(uint256 _index) external view returns (uint256);</span><br><span class=\"line\">    function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>接口说明:</strong></p>\n<ul>\n<li>totalSupply(): 返回NFT总量</li>\n<li>tokenByIndex(): 通过索引返回对应的tokenId。</li>\n<li>tokenOfOwnerByIndex(): 所有者可以一次拥有多个的NFT, 此函数返回_owner拥有的NFT列表中对应索引的tokenId。</li>\n</ul>\n<h2 id=\"补充说明\"><a href=\"#补充说明\" class=\"headerlink\" title=\"补充说明\"></a>补充说明</h2><h3 id=\"NTF-IDs\"><a href=\"#NTF-IDs\" class=\"headerlink\" title=\"NTF IDs\"></a>NTF IDs</h3><p>NTF ID，即tokenId，在合约中用唯一的uint265进行标识，每个NFT的ID在智能合约的生命周期内不允许改变。推荐的实现方式有：</p>\n<ol>\n<li>从0开始，每新加一个NFT，NTF ID加1</li>\n<li>使用sha3后uuid转换为NTF ID</li>\n</ol>\n<h3 id=\"与ERC-20的兼容性\"><a href=\"#与ERC-20的兼容性\" class=\"headerlink\" title=\"与ERC-20的兼容性\"></a>与ERC-20的兼容性</h3><p>ERC721标准尽可能遵循 ERC-20 的语义，但由于同质代币与非同质代币之间的根本差异，并不能完全兼容ERC-20。</p>\n<h3 id=\"交易、挖矿、销毁\"><a href=\"#交易、挖矿、销毁\" class=\"headerlink\" title=\"交易、挖矿、销毁\"></a>交易、挖矿、销毁</h3><p>在实现transter相关接口时除了满足上面的的条件外，我们可以根据需要添加自己的逻辑，如加入黑名单等。<br>同时挖矿、销毁尽管不是标准的一部分，我们可以根据需要实现。</p>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ul>\n<li><a href=\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md\">EIPS-165</a></li>\n<li><a href=\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\">EIPS-721</a></li>\n</ul>\n","categories":[{"name":"学习记录","path":"api/categories/学习记录.json"},{"name":"区块链","path":"api/categories/区块链.json"},{"name":"以太坊","path":"api/categories/以太坊.json"}],"tags":[{"name":"区块链","path":"api/tags/区块链.json"},{"name":"以太坊","path":"api/tags/以太坊.json"},{"name":"ERC721","path":"api/tags/ERC721.json"}]}