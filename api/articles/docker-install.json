{"title":"安装Docker","slug":"docker-install","date":"2022-06-11T03:11:19.000Z","updated":"2022-10-19T14:40:00.248Z","comments":true,"path":"api/articles/docker-install.json","realPath":"/2022/docker-install/index/","excerpt":null,"covers":["/img/2022/install-docker/979767-20220611152733982-509376277.png","/img/2022/install-docker/979767-20220611152714666-1498814086.png"],"cover":"/img/2022/install-docker/979767-20220611152733982-509376277.png","content":"<h2 id=\"系统初始化\"><a href=\"#系统初始化\" class=\"headerlink\" title=\"系统初始化\"></a>系统初始化</h2><p>本次作为测试安装，我这里使用的是一台虚拟机，具体配置如下：</p>\n<table>\n<thead>\n<tr>\n<th>主机名</th>\n<th>IP 地址</th>\n<th>系统版本</th>\n<th>内存（G）</th>\n<th>CPU（核）</th>\n<th>硬盘（G）</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>node-01</td>\n<td>192.168.200.101</td>\n<td>CentOS Linux release 7.9.2009</td>\n<td>4</td>\n<td>4</td>\n<td>20</td>\n</tr>\n</tbody></table>\n<ol>\n<li>关闭防火墙和 Selinux</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 关闭防火墙</span></span><br><span class=\"line\">systemctl stop firewalld</span><br><span class=\"line\">systemctl <span class=\"built_in\">disable</span> firewalld</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭 Selinux</span></span><br><span class=\"line\">sed -i <span class=\"string\">&quot;s#^SELINUX=.*#SELINUX=disabled#g&quot;</span> /etc/selinux/config</span><br><span class=\"line\">setenforce 0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭 swap 分区</span></span><br><span class=\"line\">swapoff -a &amp;&amp; sysctl -w vm.swappiness=0</span><br><span class=\"line\">sed -ri <span class=\"string\">&#x27;/^[^#]*swap/s@^@#@&#x27;</span> /etc/fstab</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>配置 yum 源（云服务器不需要）</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 备份旧的 yum 源</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /etc/yum.repos.d/</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> backup-$(<span class=\"built_in\">date</span> +%F)</span><br><span class=\"line\"><span class=\"built_in\">mv</span> *repo backup-$(<span class=\"built_in\">date</span> +%F)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加阿里云 yum 源</span></span><br><span class=\"line\">curl http://mirrors.aliyun.com/repo/Centos-7.repo -o ali.repo</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>安装基础依赖</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装 epel 源</span></span><br><span class=\"line\">yum -y install epel-release</span><br><span class=\"line\">yum clean all</span><br><span class=\"line\">yum makecache</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装常用依赖</span></span><br><span class=\"line\">yum -y install gcc glibc gcc-c++ make cmake net-tools screen vim lrzsz tree dos2unix lsof \\</span><br><span class=\"line\">    tcpdump bash-completion wget ntp setuptool openssl openssl-devel bind-utils traceroute \\</span><br><span class=\"line\">    bash-completion bash-completion-extras glib2 glib2-devel unzip bzip2 bzip2-devel libevent libevent-devel \\</span><br><span class=\"line\">    ntp expect pcre pcre-devel zlib zlib-devel jq psmisc tcping yum-utils device-mapper-persistent-data \\</span><br><span class=\"line\">    lvm2 git device-mapper-persistent-data bridge-utils container-selinux binutils-devel \\</span><br><span class=\"line\">    ncurses ncurses-devel elfutils-libelf-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 升级服务器</span></span><br><span class=\"line\">yum update</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>时间同步</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;# 互联网时间同步&quot;</span> &gt;&gt; /var/spool/cron/root</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;*/5 * * * * /usr/sbin/ntpdate time2.aliyun.com &gt;/dev/null 2&gt;&amp;1&quot;</span> &gt;&gt; /var/spool/cron/root</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>打开文件数优化</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &gt;&gt; /etc/security/limits.conf &lt;&lt; <span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\"># 打开文件优化配置</span></span><br><span class=\"line\"><span class=\"string\">* soft nofile 655360</span></span><br><span class=\"line\"><span class=\"string\">* hard nofile 131072</span></span><br><span class=\"line\"><span class=\"string\">* soft nproc 655350</span></span><br><span class=\"line\"><span class=\"string\">* hard nproc 655350</span></span><br><span class=\"line\"><span class=\"string\">* soft memlock unlimited</span></span><br><span class=\"line\"><span class=\"string\">* hard memlock unlimited</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>内核优化</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &gt;&gt; /etc/sysctl.d/user.conf &lt;&lt; <span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\"># 内核调优</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.ip_forward = 1</span></span><br><span class=\"line\"><span class=\"string\">net.bridge.bridge-nf-call-iptables = 1</span></span><br><span class=\"line\"><span class=\"string\">net.bridge.bridge-nf-call-ip6tables = 1</span></span><br><span class=\"line\"><span class=\"string\">fs.may_detach_mounts = 1</span></span><br><span class=\"line\"><span class=\"string\">vm.overcommit_memory=1</span></span><br><span class=\"line\"><span class=\"string\">vm.panic_on_oom=0</span></span><br><span class=\"line\"><span class=\"string\">fs.inotify.max_user_watches=89100</span></span><br><span class=\"line\"><span class=\"string\">fs.file-max=52706963</span></span><br><span class=\"line\"><span class=\"string\">fs.nr_open=52706963</span></span><br><span class=\"line\"><span class=\"string\">net.netfilter.nf_conntrack_max=2310720</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_keepalive_time = 600</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_keepalive_probes = 3</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_keepalive_intvl =15</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_max_tw_buckets = 36000</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_tw_reuse = 1</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_max_orphans = 327680</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_orphan_retries = 3</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_syncookies = 1</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_max_syn_backlog = 16384</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.ip_conntrack_max = 65536</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_max_syn_backlog = 16384</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_timestamps = 0</span></span><br><span class=\"line\"><span class=\"string\">net.core.somaxconn = 16384</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"7\">\n<li>内核升级</li>\n</ol>\n<p>docker 对于 CentOS 的要求为内核版本不低于 <code>3.10</code>，尽管 7.9 已经是 3.10 版本，但还是有升级的必要。</p>\n<p>同时作为生产环境，一般不会选择安装最新版本。但官方仓库中提供的 rpm 一般只会有一个 lt 和一个 ml 版本，所以需要从第三方下载想要的版本，统一服务器的内核版本，可以避免出现未知 BUG。</p>\n<blockquote>\n<p><a href=\"http://193.49.22.109/elrepo/kernel/el7/x86_64/RPMS/\">http://193.49.22.109/elrepo/kernel/el7/x86_64/RPMS/</a></p>\n</blockquote>\n<p>本次使用的是 4 版本最后一版：<code>4.20</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载内核 rpm 包</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/local/src/</span><br><span class=\"line\">wget http://193.49.22.109/elrepo/kernel/el7/x86_64/RPMS/kernel-ml-4.20.13-1.el7.elrepo.x86_64.rpm</span><br><span class=\"line\">wget http://193.49.22.109/elrepo/kernel/el7/x86_64/RPMS/kernel-ml-devel-4.20.13-1.el7.elrepo.x86_64.rpm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装内核</span></span><br><span class=\"line\">yum -y localinstall kernel-ml-*</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看顺序</span></span><br><span class=\"line\">awk -F\\<span class=\"string\">&#x27; &#x27;</span><span class=\"variable\">$1</span>==<span class=\"string\">&quot;menuentry &quot;</span> &#123;<span class=\"built_in\">print</span> i++ <span class=\"string\">&quot; : &quot;</span> <span class=\"variable\">$2</span>&#125;<span class=\"string\">&#x27; /etc/grub2.cfg</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 设置默认启动内核，上面的命令可以看到最新内核的序号是 0</span></span><br><span class=\"line\"><span class=\"string\">grub2-set-default 0</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 重启系统</span></span><br><span class=\"line\"><span class=\"string\">reboot</span></span><br></pre></td></tr></table></figure>\n\n<p>系统启动完成之后，查看内核情况：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">uname</span> -r</span><br></pre></td></tr></table></figure>\n\n<p>到此，系统初始化完成！</p>\n<h2 id=\"安装包准备\"><a href=\"#安装包准备\" class=\"headerlink\" title=\"安装包准备\"></a>安装包准备</h2><p>docker 目前有三种版本可供选择：<code>nightly（开发版）</code>，<code>test（测试版）</code>，<code>stable（稳定版）</code>。</p>\n<p>对于生产环境，为了避免因为版本不同导致集群出现未知 BUG，建议手动下载 rpm 包安装。本次安装版本为 <code>20.10.9</code>,下载地址：</p>\n<blockquote>\n<p><a href=\"https://download.docker.com/linux/centos/7/x86_64/stable/Packages/\">https://download.docker.com/linux/centos/7/x86_64/stable/Packages/</a></p>\n</blockquote>\n<p>如果觉得下载慢，可以使用国内的镜像地址：</p>\n<blockquote>\n<p><a href=\"http://mirrors.ustc.edu.cn/docker-ce/linux/centos/7/x86_64/stable/Packages/\">http://mirrors.ustc.edu.cn/docker-ce/linux/centos/7/x86_64/stable/Packages/</a></p>\n</blockquote>\n<p>需要下载的安装包如下：</p>\n<ol>\n<li>docker-ce-20.10.9-3.el7.x86_64.rpm（docker 引擎）</li>\n<li>docker-ce-cli-20.10.9-3.el7.x86_64.rpm（docker 引擎的命令行）</li>\n<li>containerd.io-1.6.6-3.1.el7.x86_64.rpm（守护进程，独立于 docker 工作，管理容器的生命周期）</li>\n<li>docker-ce-rootless-extras-20.10.9-3.el7.x86_64.rpm（ce 需要的依赖）</li>\n<li>docker-scan-plugin-0.9.0-3.el7.x86_64.rpm（cli 需要的依赖）</li>\n</ol>\n<h2 id=\"服务安装\"><a href=\"#服务安装\" class=\"headerlink\" title=\"服务安装\"></a>服务安装</h2><p>事先使用 lrzsz 将下载的安装包上传到 <code>/usr/local/src/</code> 目录然后开始进行安装。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 卸载可能存在的旧版本 docker</span></span><br><span class=\"line\">yum remove docker \\</span><br><span class=\"line\">\tdocker-client \\</span><br><span class=\"line\">\tdocker-client-latest \\</span><br><span class=\"line\">\tdocker-common \\</span><br><span class=\"line\">\tdocker-latest \\</span><br><span class=\"line\">\tdocker-latest-logrotate \\</span><br><span class=\"line\">\tdocker-logrotate \\</span><br><span class=\"line\">\tdocker-engine</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装新版本</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/local/src/</span><br><span class=\"line\">yum -y localinstall docker* containerd*</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动 docker</span></span><br><span class=\"line\">systemctl start docker</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> docker</span><br><span class=\"line\">systemctl status docker</span><br></pre></td></tr></table></figure>\n\n<p>查看 docker 信息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker version</span><br></pre></td></tr></table></figure>\n\n<p>结果如下：</p>\n<p><img src=\"/img/2022/install-docker/979767-20220611152733982-509376277.png\"></p>\n<h2 id=\"服务优化\"><a href=\"#服务优化\" class=\"headerlink\" title=\"服务优化\"></a>服务优化</h2><p>由于 docker 默认的 registry 是 docker hub，而 docker hub 又是外网的服务，可能因为网络原因访问，下载都会非常慢。所以需要将 registry 调整为国内的。</p>\n<p>国内常用的 registry 有以下一些：</p>\n<ul>\n<li>阿里云（需要注册用户）：<code>https://&lt;你的ID&gt;.mirror.aliyuncs.com</code></li>\n<li>网易：<code>http://hub-mirror.c.163.com</code></li>\n<li>中科大：<code>https://docker.mirrors.ustc.edu.cn</code></li>\n</ul>\n<p>通过增加配置来修改 docker 默认的 registry 地址：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建 docker 数据目录</span></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /ops/&#123;data,service,<span class=\"built_in\">log</span>,backup,shell,package&#125;</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /ops/data/docker/&#123;run,lib&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改配置文件</span></span><br><span class=\"line\"><span class=\"comment\"># exec-opts：调整 docker 为 systemd 管理</span></span><br><span class=\"line\"><span class=\"comment\"># registry-mirrors：设置注册点</span></span><br><span class=\"line\"><span class=\"comment\"># bip：修改 docker 的网段</span></span><br><span class=\"line\"><span class=\"comment\"># exec-root：重新定义 docker 的运行目录</span></span><br><span class=\"line\"><span class=\"comment\"># data-root：重新定义 docker 的数据目录</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> &gt; /etc/docker/daemon.json &lt;&lt; <span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">&#123;</span></span><br><span class=\"line\"><span class=\"string\">    &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span></span><br><span class=\"line\"><span class=\"string\">    &quot;registry-mirrors&quot;: [&quot;https://docker.mirrors.ustc.edu.cn&quot;],</span></span><br><span class=\"line\"><span class=\"string\">    &quot;bip&quot;: &quot;172.16.0.1/16&quot;,</span></span><br><span class=\"line\"><span class=\"string\">    &quot;exec-root&quot;: &quot;/ops/data/docker/run&quot;,</span></span><br><span class=\"line\"><span class=\"string\">    &quot;data-root&quot;: &quot;/ops/data/docker/lib&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启 docker</span></span><br><span class=\"line\">systemctl stop docker</span><br><span class=\"line\">systemctl start docker</span><br><span class=\"line\">systemctl status docker</span><br></pre></td></tr></table></figure>\n\n<p>如果不清楚网段划分，可以使用工具查看：</p>\n<blockquote>\n<p><a href=\"http://tools.jb51.net/aideddesign/ip_net_calc/\">http://tools.jb51.net/aideddesign/ip_net_calc/</a></p>\n</blockquote>\n<p>重启完成后查看 docker 信息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker info</span><br></pre></td></tr></table></figure>\n\n<p>如图所示：</p>\n<p><img src=\"/img/2022/install-docker/979767-20220611152714666-1498814086.png\"></p>\n<h2 id=\"故障排查\"><a href=\"#故障排查\" class=\"headerlink\" title=\"故障排查\"></a>故障排查</h2><p>docker 在停止的时候可能会出现提醒：</p>\n<blockquote>\n<p>Warning: Stopping docker.service, but it can still be activated by: docker.socket</p>\n</blockquote>\n<p>告警的意思为：如果你试图连接到 docker socket，而 docker 服务没有运行，系统将自动启动 docker。</p>\n<p>该配置是在 <code>/lib/systemd/system/docker.service</code> 中配置的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span><br></pre></td></tr></table></figure>\n\n<p>所以这个告警可以忽略掉。</p>\n<p>重启失败，大概可能是 &#x2F;etc&#x2F;docker&#x2F;daemon.json 存在报错，可以通过错误日志查看信息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">tail</span> -1000f /var/log/messages</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>故障问题 1</li>\n</ul>\n<blockquote>\n<p>unable to configure the Docker daemon with file &#x2F;etc&#x2F;docker&#x2F;daemon.json: invalid character ‘Â’ looking for beginning of value</p>\n</blockquote>\n<p>查看配置文件没有问题，但是一直这个错误，所以我怀疑里面的 tab 或者空格存在问题，通过执行命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> -A /etc/docker/daemon.json</span><br></pre></td></tr></table></figure>\n\n<p>发现文件中确实有很多特殊的字符，因为配置是网上复制的。通过将里面空格和 tab 替换成空格之后故障解决。</p>\n<ul>\n<li>故障问题 2</li>\n</ul>\n<blockquote>\n<p>unable to configure the Docker daemon with file &#x2F;etc&#x2F;docker&#x2F;daemon.json: invalid character ‘}’ looking for beginning of object key string</p>\n</blockquote>\n<p>原因是我在 json 最后一个值后面也加了 , 符号的缘故，删除了就好了。</p>\n<h2 id=\"daemon-json\"><a href=\"#daemon-json\" class=\"headerlink\" title=\"daemon.json\"></a>daemon.json</h2><p>配置文件 <code>daemon.json</code> 参数详解：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">// 在引擎 API 中设置 CORS 标头</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;api-cors-header&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 要加载的授权插件</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;authorization-plugins&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 将容器附加到网桥</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;bridge&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 指定网桥 IP</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;bip&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;192.168.88.0/22&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 为所有容器设置父 cgroup</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;cgroup-parent&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 分布式存储后端的 URL</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;cluster-store&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设置集群存储选项（默认map []）</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;cluster-store-opts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 要通告的地址或接口名称</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;cluster-advertise&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 启用调试模式，启用后，可以看到很多的启动信息。默认 false</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;debug&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 容器默认网关 IPv4 地址</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;default-gateway&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 容器默认网关 IPv6 地址</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;default-gateway-v6&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 容器的默认 OCI 运行时，默认为 runc</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;default-runtime&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;runc&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 容器的默认 ulimit（默认[]）</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;default-ulimits&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设定容器 DNS 的地址，在容器的 /etc/resolv.conf 文件中可查看</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;dns&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;192.168.1.1&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 容器 /etc/resolv.conf 文件，其他设置</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;dns-opts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设定容器的搜索域。</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;dns-search&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 运行时执行选项</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;exec-opts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 执行状态文件的根目录，默认 /var/run/docker</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;exec-root&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 固定 IP 的 IPv4 子网</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;fixed-cidr&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 固定 IP 的 IPv6 子网</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;fixed-cidr-v6&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// docker 运行时使用的根路径，默认 /var/lib/docker</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;data-root&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/var/lib/docker&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// UNIX 接字的组，默认 docker</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;group&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设置容器 hosts</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;hosts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 启用容器间通信，默认 true</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;icc&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 绑定容器端口时的默认 IP，默认 0.0.0.0</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;ip&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;0.0.0.0&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 启用 iptables 规则添加，默认 true</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;iptables&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 启用IPv6网络</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;ipv6&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 默认 true, 启用 net.ipv4.ip_forward</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;ip-forward&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 启用 IP 伪装，默认 true</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;ip-masq&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设置私有仓库地址可以设为 http</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;insecure-registries&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;120.123.122.123:12312&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// docker 主机的标签</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;labels&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;nodeName=node-101&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 在容器仍在运行时启用 docker 的实时还原</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;live-restore&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 容器日志的默认驱动程序，默认 json-file</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;log-driver&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设置日志记录级别：&quot;调试&quot;，&quot;信息&quot;，&quot;警告&quot;，&quot;错误&quot;，&quot;致命&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;log-level&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设置每个请求的最大并发下载量，默认 3</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;max-concurrent-downloads&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">3</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设置每次推送的最大同时上传数，默认 5</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;max-concurrent-uploads&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">5</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设置容器网络 MTU</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;mtu&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设置守护程序的 oom_score_adj，默认 -500</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;oom-score-adjust&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">-500</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// Docker 守护进程的 PID 文件</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;pidfile&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 全时间戳机制</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;raw-logs&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设置镜像加速</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;registry-mirrors&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;https://192.498.89.232:89&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 启用 selinux 支持，默认 false</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;selinux-enabled&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 要使用的存储驱动程序</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;storage-driver&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设置默认地址或群集广告地址的接口</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;swarm-default-advertise-addr&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 启动 TLS 认证开关，默认 false</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;tls&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 通过 CA 认证过的 certificate 文件路径，默认 ~/.docker/ca.pem</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;tlscacert&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// TLS 的 certificate 文件路径，默认 ~/.docker/cert.pem</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;tlscert&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// TLS 的 key 文件路径，默认 ~/.docker/key.pem</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;tlskey&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 使用 TLS 并做后台进程与客户端通讯的验证，默认 false</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;tlsverify&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 使用 userland 代理进行环回流量，默认 true</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;userland-proxy&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 用户名称空间的用户/组设置</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;userns-remap&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 存储驱动程序选项</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;storage-opts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;overlay2.override_kernel_check=true&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;overlay2.size=15G&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 容器默认日志驱动程序选项</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;log-opts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;max-file&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;3&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;max-size&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;10m&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n","more":"<h2 id=\"系统初始化\"><a href=\"#系统初始化\" class=\"headerlink\" title=\"系统初始化\"></a>系统初始化</h2><p>本次作为测试安装，我这里使用的是一台虚拟机，具体配置如下：</p>\n<table>\n<thead>\n<tr>\n<th>主机名</th>\n<th>IP 地址</th>\n<th>系统版本</th>\n<th>内存（G）</th>\n<th>CPU（核）</th>\n<th>硬盘（G）</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>node-01</td>\n<td>192.168.200.101</td>\n<td>CentOS Linux release 7.9.2009</td>\n<td>4</td>\n<td>4</td>\n<td>20</td>\n</tr>\n</tbody></table>\n<ol>\n<li>关闭防火墙和 Selinux</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 关闭防火墙</span></span><br><span class=\"line\">systemctl stop firewalld</span><br><span class=\"line\">systemctl <span class=\"built_in\">disable</span> firewalld</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭 Selinux</span></span><br><span class=\"line\">sed -i <span class=\"string\">&quot;s#^SELINUX=.*#SELINUX=disabled#g&quot;</span> /etc/selinux/config</span><br><span class=\"line\">setenforce 0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭 swap 分区</span></span><br><span class=\"line\">swapoff -a &amp;&amp; sysctl -w vm.swappiness=0</span><br><span class=\"line\">sed -ri <span class=\"string\">&#x27;/^[^#]*swap/s@^@#@&#x27;</span> /etc/fstab</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>配置 yum 源（云服务器不需要）</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 备份旧的 yum 源</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /etc/yum.repos.d/</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> backup-$(<span class=\"built_in\">date</span> +%F)</span><br><span class=\"line\"><span class=\"built_in\">mv</span> *repo backup-$(<span class=\"built_in\">date</span> +%F)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加阿里云 yum 源</span></span><br><span class=\"line\">curl http://mirrors.aliyun.com/repo/Centos-7.repo -o ali.repo</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>安装基础依赖</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装 epel 源</span></span><br><span class=\"line\">yum -y install epel-release</span><br><span class=\"line\">yum clean all</span><br><span class=\"line\">yum makecache</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装常用依赖</span></span><br><span class=\"line\">yum -y install gcc glibc gcc-c++ make cmake net-tools screen vim lrzsz tree dos2unix lsof \\</span><br><span class=\"line\">    tcpdump bash-completion wget ntp setuptool openssl openssl-devel bind-utils traceroute \\</span><br><span class=\"line\">    bash-completion bash-completion-extras glib2 glib2-devel unzip bzip2 bzip2-devel libevent libevent-devel \\</span><br><span class=\"line\">    ntp expect pcre pcre-devel zlib zlib-devel jq psmisc tcping yum-utils device-mapper-persistent-data \\</span><br><span class=\"line\">    lvm2 git device-mapper-persistent-data bridge-utils container-selinux binutils-devel \\</span><br><span class=\"line\">    ncurses ncurses-devel elfutils-libelf-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 升级服务器</span></span><br><span class=\"line\">yum update</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>时间同步</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;# 互联网时间同步&quot;</span> &gt;&gt; /var/spool/cron/root</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;*/5 * * * * /usr/sbin/ntpdate time2.aliyun.com &gt;/dev/null 2&gt;&amp;1&quot;</span> &gt;&gt; /var/spool/cron/root</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>打开文件数优化</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &gt;&gt; /etc/security/limits.conf &lt;&lt; <span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\"># 打开文件优化配置</span></span><br><span class=\"line\"><span class=\"string\">* soft nofile 655360</span></span><br><span class=\"line\"><span class=\"string\">* hard nofile 131072</span></span><br><span class=\"line\"><span class=\"string\">* soft nproc 655350</span></span><br><span class=\"line\"><span class=\"string\">* hard nproc 655350</span></span><br><span class=\"line\"><span class=\"string\">* soft memlock unlimited</span></span><br><span class=\"line\"><span class=\"string\">* hard memlock unlimited</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>内核优化</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &gt;&gt; /etc/sysctl.d/user.conf &lt;&lt; <span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\"># 内核调优</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.ip_forward = 1</span></span><br><span class=\"line\"><span class=\"string\">net.bridge.bridge-nf-call-iptables = 1</span></span><br><span class=\"line\"><span class=\"string\">net.bridge.bridge-nf-call-ip6tables = 1</span></span><br><span class=\"line\"><span class=\"string\">fs.may_detach_mounts = 1</span></span><br><span class=\"line\"><span class=\"string\">vm.overcommit_memory=1</span></span><br><span class=\"line\"><span class=\"string\">vm.panic_on_oom=0</span></span><br><span class=\"line\"><span class=\"string\">fs.inotify.max_user_watches=89100</span></span><br><span class=\"line\"><span class=\"string\">fs.file-max=52706963</span></span><br><span class=\"line\"><span class=\"string\">fs.nr_open=52706963</span></span><br><span class=\"line\"><span class=\"string\">net.netfilter.nf_conntrack_max=2310720</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_keepalive_time = 600</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_keepalive_probes = 3</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_keepalive_intvl =15</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_max_tw_buckets = 36000</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_tw_reuse = 1</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_max_orphans = 327680</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_orphan_retries = 3</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_syncookies = 1</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_max_syn_backlog = 16384</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.ip_conntrack_max = 65536</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_max_syn_backlog = 16384</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_timestamps = 0</span></span><br><span class=\"line\"><span class=\"string\">net.core.somaxconn = 16384</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"7\">\n<li>内核升级</li>\n</ol>\n<p>docker 对于 CentOS 的要求为内核版本不低于 <code>3.10</code>，尽管 7.9 已经是 3.10 版本，但还是有升级的必要。</p>\n<p>同时作为生产环境，一般不会选择安装最新版本。但官方仓库中提供的 rpm 一般只会有一个 lt 和一个 ml 版本，所以需要从第三方下载想要的版本，统一服务器的内核版本，可以避免出现未知 BUG。</p>\n<blockquote>\n<p><a href=\"http://193.49.22.109/elrepo/kernel/el7/x86_64/RPMS/\">http://193.49.22.109/elrepo/kernel/el7/x86_64/RPMS/</a></p>\n</blockquote>\n<p>本次使用的是 4 版本最后一版：<code>4.20</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载内核 rpm 包</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/local/src/</span><br><span class=\"line\">wget http://193.49.22.109/elrepo/kernel/el7/x86_64/RPMS/kernel-ml-4.20.13-1.el7.elrepo.x86_64.rpm</span><br><span class=\"line\">wget http://193.49.22.109/elrepo/kernel/el7/x86_64/RPMS/kernel-ml-devel-4.20.13-1.el7.elrepo.x86_64.rpm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装内核</span></span><br><span class=\"line\">yum -y localinstall kernel-ml-*</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看顺序</span></span><br><span class=\"line\">awk -F\\<span class=\"string\">&#x27; &#x27;</span><span class=\"variable\">$1</span>==<span class=\"string\">&quot;menuentry &quot;</span> &#123;<span class=\"built_in\">print</span> i++ <span class=\"string\">&quot; : &quot;</span> <span class=\"variable\">$2</span>&#125;<span class=\"string\">&#x27; /etc/grub2.cfg</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 设置默认启动内核，上面的命令可以看到最新内核的序号是 0</span></span><br><span class=\"line\"><span class=\"string\">grub2-set-default 0</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 重启系统</span></span><br><span class=\"line\"><span class=\"string\">reboot</span></span><br></pre></td></tr></table></figure>\n\n<p>系统启动完成之后，查看内核情况：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">uname</span> -r</span><br></pre></td></tr></table></figure>\n\n<p>到此，系统初始化完成！</p>\n<h2 id=\"安装包准备\"><a href=\"#安装包准备\" class=\"headerlink\" title=\"安装包准备\"></a>安装包准备</h2><p>docker 目前有三种版本可供选择：<code>nightly（开发版）</code>，<code>test（测试版）</code>，<code>stable（稳定版）</code>。</p>\n<p>对于生产环境，为了避免因为版本不同导致集群出现未知 BUG，建议手动下载 rpm 包安装。本次安装版本为 <code>20.10.9</code>,下载地址：</p>\n<blockquote>\n<p><a href=\"https://download.docker.com/linux/centos/7/x86_64/stable/Packages/\">https://download.docker.com/linux/centos/7/x86_64/stable/Packages/</a></p>\n</blockquote>\n<p>如果觉得下载慢，可以使用国内的镜像地址：</p>\n<blockquote>\n<p><a href=\"http://mirrors.ustc.edu.cn/docker-ce/linux/centos/7/x86_64/stable/Packages/\">http://mirrors.ustc.edu.cn/docker-ce/linux/centos/7/x86_64/stable/Packages/</a></p>\n</blockquote>\n<p>需要下载的安装包如下：</p>\n<ol>\n<li>docker-ce-20.10.9-3.el7.x86_64.rpm（docker 引擎）</li>\n<li>docker-ce-cli-20.10.9-3.el7.x86_64.rpm（docker 引擎的命令行）</li>\n<li>containerd.io-1.6.6-3.1.el7.x86_64.rpm（守护进程，独立于 docker 工作，管理容器的生命周期）</li>\n<li>docker-ce-rootless-extras-20.10.9-3.el7.x86_64.rpm（ce 需要的依赖）</li>\n<li>docker-scan-plugin-0.9.0-3.el7.x86_64.rpm（cli 需要的依赖）</li>\n</ol>\n<h2 id=\"服务安装\"><a href=\"#服务安装\" class=\"headerlink\" title=\"服务安装\"></a>服务安装</h2><p>事先使用 lrzsz 将下载的安装包上传到 <code>/usr/local/src/</code> 目录然后开始进行安装。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 卸载可能存在的旧版本 docker</span></span><br><span class=\"line\">yum remove docker \\</span><br><span class=\"line\">\tdocker-client \\</span><br><span class=\"line\">\tdocker-client-latest \\</span><br><span class=\"line\">\tdocker-common \\</span><br><span class=\"line\">\tdocker-latest \\</span><br><span class=\"line\">\tdocker-latest-logrotate \\</span><br><span class=\"line\">\tdocker-logrotate \\</span><br><span class=\"line\">\tdocker-engine</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装新版本</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/local/src/</span><br><span class=\"line\">yum -y localinstall docker* containerd*</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动 docker</span></span><br><span class=\"line\">systemctl start docker</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> docker</span><br><span class=\"line\">systemctl status docker</span><br></pre></td></tr></table></figure>\n\n<p>查看 docker 信息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker version</span><br></pre></td></tr></table></figure>\n\n<p>结果如下：</p>\n<p><img src=\"/img/2022/install-docker/979767-20220611152733982-509376277.png\"></p>\n<h2 id=\"服务优化\"><a href=\"#服务优化\" class=\"headerlink\" title=\"服务优化\"></a>服务优化</h2><p>由于 docker 默认的 registry 是 docker hub，而 docker hub 又是外网的服务，可能因为网络原因访问，下载都会非常慢。所以需要将 registry 调整为国内的。</p>\n<p>国内常用的 registry 有以下一些：</p>\n<ul>\n<li>阿里云（需要注册用户）：<code>https://&lt;你的ID&gt;.mirror.aliyuncs.com</code></li>\n<li>网易：<code>http://hub-mirror.c.163.com</code></li>\n<li>中科大：<code>https://docker.mirrors.ustc.edu.cn</code></li>\n</ul>\n<p>通过增加配置来修改 docker 默认的 registry 地址：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建 docker 数据目录</span></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /ops/&#123;data,service,<span class=\"built_in\">log</span>,backup,shell,package&#125;</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /ops/data/docker/&#123;run,lib&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改配置文件</span></span><br><span class=\"line\"><span class=\"comment\"># exec-opts：调整 docker 为 systemd 管理</span></span><br><span class=\"line\"><span class=\"comment\"># registry-mirrors：设置注册点</span></span><br><span class=\"line\"><span class=\"comment\"># bip：修改 docker 的网段</span></span><br><span class=\"line\"><span class=\"comment\"># exec-root：重新定义 docker 的运行目录</span></span><br><span class=\"line\"><span class=\"comment\"># data-root：重新定义 docker 的数据目录</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> &gt; /etc/docker/daemon.json &lt;&lt; <span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">&#123;</span></span><br><span class=\"line\"><span class=\"string\">    &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span></span><br><span class=\"line\"><span class=\"string\">    &quot;registry-mirrors&quot;: [&quot;https://docker.mirrors.ustc.edu.cn&quot;],</span></span><br><span class=\"line\"><span class=\"string\">    &quot;bip&quot;: &quot;172.16.0.1/16&quot;,</span></span><br><span class=\"line\"><span class=\"string\">    &quot;exec-root&quot;: &quot;/ops/data/docker/run&quot;,</span></span><br><span class=\"line\"><span class=\"string\">    &quot;data-root&quot;: &quot;/ops/data/docker/lib&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启 docker</span></span><br><span class=\"line\">systemctl stop docker</span><br><span class=\"line\">systemctl start docker</span><br><span class=\"line\">systemctl status docker</span><br></pre></td></tr></table></figure>\n\n<p>如果不清楚网段划分，可以使用工具查看：</p>\n<blockquote>\n<p><a href=\"http://tools.jb51.net/aideddesign/ip_net_calc/\">http://tools.jb51.net/aideddesign/ip_net_calc/</a></p>\n</blockquote>\n<p>重启完成后查看 docker 信息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker info</span><br></pre></td></tr></table></figure>\n\n<p>如图所示：</p>\n<p><img src=\"/img/2022/install-docker/979767-20220611152714666-1498814086.png\"></p>\n<h2 id=\"故障排查\"><a href=\"#故障排查\" class=\"headerlink\" title=\"故障排查\"></a>故障排查</h2><p>docker 在停止的时候可能会出现提醒：</p>\n<blockquote>\n<p>Warning: Stopping docker.service, but it can still be activated by: docker.socket</p>\n</blockquote>\n<p>告警的意思为：如果你试图连接到 docker socket，而 docker 服务没有运行，系统将自动启动 docker。</p>\n<p>该配置是在 <code>/lib/systemd/system/docker.service</code> 中配置的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span><br></pre></td></tr></table></figure>\n\n<p>所以这个告警可以忽略掉。</p>\n<p>重启失败，大概可能是 &#x2F;etc&#x2F;docker&#x2F;daemon.json 存在报错，可以通过错误日志查看信息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">tail</span> -1000f /var/log/messages</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>故障问题 1</li>\n</ul>\n<blockquote>\n<p>unable to configure the Docker daemon with file &#x2F;etc&#x2F;docker&#x2F;daemon.json: invalid character ‘Â’ looking for beginning of value</p>\n</blockquote>\n<p>查看配置文件没有问题，但是一直这个错误，所以我怀疑里面的 tab 或者空格存在问题，通过执行命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> -A /etc/docker/daemon.json</span><br></pre></td></tr></table></figure>\n\n<p>发现文件中确实有很多特殊的字符，因为配置是网上复制的。通过将里面空格和 tab 替换成空格之后故障解决。</p>\n<ul>\n<li>故障问题 2</li>\n</ul>\n<blockquote>\n<p>unable to configure the Docker daemon with file &#x2F;etc&#x2F;docker&#x2F;daemon.json: invalid character ‘}’ looking for beginning of object key string</p>\n</blockquote>\n<p>原因是我在 json 最后一个值后面也加了 , 符号的缘故，删除了就好了。</p>\n<h2 id=\"daemon-json\"><a href=\"#daemon-json\" class=\"headerlink\" title=\"daemon.json\"></a>daemon.json</h2><p>配置文件 <code>daemon.json</code> 参数详解：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">// 在引擎 API 中设置 CORS 标头</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;api-cors-header&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 要加载的授权插件</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;authorization-plugins&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 将容器附加到网桥</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;bridge&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 指定网桥 IP</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;bip&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;192.168.88.0/22&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 为所有容器设置父 cgroup</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;cgroup-parent&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 分布式存储后端的 URL</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;cluster-store&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设置集群存储选项（默认map []）</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;cluster-store-opts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 要通告的地址或接口名称</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;cluster-advertise&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 启用调试模式，启用后，可以看到很多的启动信息。默认 false</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;debug&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 容器默认网关 IPv4 地址</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;default-gateway&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 容器默认网关 IPv6 地址</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;default-gateway-v6&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 容器的默认 OCI 运行时，默认为 runc</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;default-runtime&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;runc&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 容器的默认 ulimit（默认[]）</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;default-ulimits&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设定容器 DNS 的地址，在容器的 /etc/resolv.conf 文件中可查看</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;dns&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;192.168.1.1&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 容器 /etc/resolv.conf 文件，其他设置</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;dns-opts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设定容器的搜索域。</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;dns-search&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 运行时执行选项</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;exec-opts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 执行状态文件的根目录，默认 /var/run/docker</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;exec-root&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 固定 IP 的 IPv4 子网</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;fixed-cidr&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 固定 IP 的 IPv6 子网</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;fixed-cidr-v6&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// docker 运行时使用的根路径，默认 /var/lib/docker</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;data-root&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/var/lib/docker&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// UNIX 接字的组，默认 docker</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;group&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设置容器 hosts</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;hosts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 启用容器间通信，默认 true</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;icc&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 绑定容器端口时的默认 IP，默认 0.0.0.0</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;ip&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;0.0.0.0&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 启用 iptables 规则添加，默认 true</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;iptables&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 启用IPv6网络</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;ipv6&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 默认 true, 启用 net.ipv4.ip_forward</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;ip-forward&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 启用 IP 伪装，默认 true</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;ip-masq&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设置私有仓库地址可以设为 http</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;insecure-registries&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;120.123.122.123:12312&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// docker 主机的标签</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;labels&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;nodeName=node-101&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 在容器仍在运行时启用 docker 的实时还原</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;live-restore&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 容器日志的默认驱动程序，默认 json-file</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;log-driver&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设置日志记录级别：&quot;调试&quot;，&quot;信息&quot;，&quot;警告&quot;，&quot;错误&quot;，&quot;致命&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;log-level&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设置每个请求的最大并发下载量，默认 3</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;max-concurrent-downloads&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">3</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设置每次推送的最大同时上传数，默认 5</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;max-concurrent-uploads&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">5</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设置容器网络 MTU</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;mtu&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设置守护程序的 oom_score_adj，默认 -500</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;oom-score-adjust&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">-500</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// Docker 守护进程的 PID 文件</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;pidfile&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 全时间戳机制</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;raw-logs&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设置镜像加速</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;registry-mirrors&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;https://192.498.89.232:89&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 启用 selinux 支持，默认 false</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;selinux-enabled&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 要使用的存储驱动程序</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;storage-driver&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 设置默认地址或群集广告地址的接口</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;swarm-default-advertise-addr&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 启动 TLS 认证开关，默认 false</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;tls&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 通过 CA 认证过的 certificate 文件路径，默认 ~/.docker/ca.pem</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;tlscacert&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// TLS 的 certificate 文件路径，默认 ~/.docker/cert.pem</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;tlscert&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// TLS 的 key 文件路径，默认 ~/.docker/key.pem</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;tlskey&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 使用 TLS 并做后台进程与客户端通讯的验证，默认 false</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;tlsverify&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 使用 userland 代理进行环回流量，默认 true</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;userland-proxy&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 用户名称空间的用户/组设置</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;userns-remap&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 存储驱动程序选项</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;storage-opts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;overlay2.override_kernel_check=true&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;overlay2.size=15G&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 容器默认日志驱动程序选项</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;log-opts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;max-file&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;3&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;max-size&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;10m&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n","categories":[{"name":"学习记录","path":"api/categories/学习记录.json"},{"name":"Docker","path":"api/categories/Docker.json"}],"tags":[{"name":"docker","path":"api/tags/docker.json"},{"name":"k8s","path":"api/tags/k8s.json"},{"name":"kubernetes","path":"api/tags/kubernetes.json"},{"name":"容器","path":"api/tags/容器.json"},{"name":"云原生","path":"api/tags/云原生.json"}]}