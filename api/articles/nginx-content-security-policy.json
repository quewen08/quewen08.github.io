{"title":"Nginx的跨域Content Security Policy通行设置","slug":"nginx-content-security-policy","date":"2022-04-29T06:05:27.000Z","updated":"2022-10-19T14:40:00.261Z","comments":true,"path":"api/articles/nginx-content-security-policy.json","realPath":"/2022/nginx-content-security-policy/nginx-content-security-policy/","excerpt":null,"covers":null,"cover":null,"content":"<h3 id=\"场景描述\"><a href=\"#场景描述\" class=\"headerlink\" title=\"场景描述\"></a>场景描述</h3><p>A 站点 HTTPS，A 站点做为中心站，引用 B&#x2F;C&#x2F;D&#x2F;E&#x2F;F……站点的资源进行供给，确定的只有 A 站点是 HTTPS，其它站点可能是 HTTP 也可能是 HTTPS，文件类型不限定，包括但不限于：CSS,JS,IMAGE,MP4,MP3,RAR,ZIP,M3U8,FLV……。</p>\n<p>如果你使用的是默认配置，那么它会提示以下错误：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Access to XMLHttpRequest at &#x27;http://site.com/index.m3u8&#x27; from origin &#x27;http://site&#x27; has been blocked by CORS policy: The response is invalid.</span><br></pre></td></tr></table></figure>\n\n<p>知道通常情况下，HTTPS 引用 HTTP 的资源就会出现跨域错误，但今天我们的要求是允许它跨域，并且尽量保证它是基本安全的。</p>\n<p>在上周我测试过很多方案，最终使用的是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">add_header Content-Security-Policy &quot;upgrade-insecure-requests&quot;;</span><br></pre></td></tr></table></figure>\n\n<p>意思是将所有 HTTP 请求尽可能的转换成 HTTPS 请求，如果对方同时支持 HTTPS 和 HTTP 协议，那这没有任何问题，但如果对方只支持 HTTP，那这时候就会报错：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Refused to load the image &#x27;http://site/file.png&#x27;</span><br><span class=\"line\">because it violates the following Content Security Policy directive:</span><br></pre></td></tr></table></figure>\n\n<p>看到提示后直觉告诉我要去放行<code>img-src</code>和<code>media-src</code>，但当我去放行设置后，问题依旧，甚至还多出了错误。</p>\n<h3 id=\"Content-Security-Policy-内容安全策略\"><a href=\"#Content-Security-Policy-内容安全策略\" class=\"headerlink\" title=\"Content-Security-Policy 内容安全策略\"></a>Content-Security-Policy 内容安全策略</h3><p>内容安全策略（CSP）需要仔细调整和精确定义策略。如果启用，CSP 会对浏览器呈现页面的方式产生重大影响（例如，默认情况下禁用内联 JavaScript，并且必须在策略中明确允许）。CSP 可防止各种攻击，包括跨站点脚本和其他跨站点注入。</p>\n<h4 id=\"Values\"><a href=\"#Values\" class=\"headerlink\" title=\"Values\"></a>Values</h4><table>\n<thead>\n<tr>\n<th>Directive</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>base-uri</td>\n<td>Define the base uri for relative uri.</td>\n</tr>\n<tr>\n<td>default-src</td>\n<td>Define loading policy for all resources type in case of a resource type dedicated directive is not defined (fallback).</td>\n</tr>\n<tr>\n<td>script-src</td>\n<td>Define which scripts the protected resource can execute.</td>\n</tr>\n<tr>\n<td>object-src</td>\n<td>Define from where the protected resource can load plugins.</td>\n</tr>\n<tr>\n<td>style-src</td>\n<td>Define which styles (CSS) the user applies to the protected resource.</td>\n</tr>\n<tr>\n<td>img-src</td>\n<td>Define from where the protected resource can load images.</td>\n</tr>\n<tr>\n<td>media-src</td>\n<td>Define from where the protected resource can load video and audio.</td>\n</tr>\n<tr>\n<td>frame-src</td>\n<td>Deprecated and replaced by child-src. Define from where the protected resource can embed frames.</td>\n</tr>\n<tr>\n<td>child-src</td>\n<td>Define from where the protected resource can embed frames.</td>\n</tr>\n<tr>\n<td>frame-ancestors</td>\n<td>Define from where the protected resource can be embedded in frames.</td>\n</tr>\n<tr>\n<td>font-src</td>\n<td>Define from where the protected resource can load fonts.</td>\n</tr>\n<tr>\n<td>connect-src</td>\n<td>Define which URIs the protected resource can load using script interfaces.</td>\n</tr>\n<tr>\n<td>manifest-src</td>\n<td>Define from where the protected resource can load manifest.</td>\n</tr>\n<tr>\n<td>form-action</td>\n<td>Define which URIs can be used as the action of HTML form elements.</td>\n</tr>\n<tr>\n<td>sandbox</td>\n<td>Specifies an HTML sandbox policy that the user agent applies to the protected resource.</td>\n</tr>\n<tr>\n<td>script-nonce</td>\n<td>Define script execution by requiring the presence of the specified nonce on script elements.</td>\n</tr>\n<tr>\n<td>plugin-types</td>\n<td>Define the set of plugins that can be invoked by the protected resource by limiting the types of resources that can be embedded.</td>\n</tr>\n<tr>\n<td>reflected-xss</td>\n<td>Instructs a user agent to activate or deactivate any heuristics used to filter or block reflected cross-site scripting attacks, equivalent to the effects of the non-standard X-XSS-Protection header.</td>\n</tr>\n<tr>\n<td>block-all-mixed-content</td>\n<td>Prevent user agent from loading mixed content.</td>\n</tr>\n<tr>\n<td>upgrade-insecure-requests</td>\n<td>Instructs user agent to download insecure resources using HTTPS.</td>\n</tr>\n<tr>\n<td>referrer</td>\n<td>Define information user agent must send in Referer header.</td>\n</tr>\n<tr>\n<td>report-uri</td>\n<td>Specifies a URI to which the user agent sends reports about policy violation.</td>\n</tr>\n<tr>\n<td>report-to</td>\n<td>Specifies a group (defined in Report-To header) to which the user agent sends reports about policy violation.</td>\n</tr>\n</tbody></table>\n<h4 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h4><p><code>Content-Security-Policy: script-src &#39;self&#39;</code></p>\n<h4 id=\"在经过反复测试后\"><a href=\"#在经过反复测试后\" class=\"headerlink\" title=\"在经过反复测试后\"></a>在经过反复测试后</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">add_header Content-Security-Policy &quot;upgrade-insecure-requests;connect-src *&quot;;</span><br></pre></td></tr></table></figure>\n\n<p>解决了全部问题，即消除全部警告，同时兼容了各种协议资源。</p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CSP\">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CSP</a></li>\n<li><a href=\"https://www.owasp.org/index.php/OWASP_Secure_Headers_Project#csp\">https://www.owasp.org/index.php/OWASP_Secure_Headers_Project#csp</a></li>\n</ul>\n","more":"<h3 id=\"场景描述\"><a href=\"#场景描述\" class=\"headerlink\" title=\"场景描述\"></a>场景描述</h3><p>A 站点 HTTPS，A 站点做为中心站，引用 B&#x2F;C&#x2F;D&#x2F;E&#x2F;F……站点的资源进行供给，确定的只有 A 站点是 HTTPS，其它站点可能是 HTTP 也可能是 HTTPS，文件类型不限定，包括但不限于：CSS,JS,IMAGE,MP4,MP3,RAR,ZIP,M3U8,FLV……。</p>\n<p>如果你使用的是默认配置，那么它会提示以下错误：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Access to XMLHttpRequest at &#x27;http://site.com/index.m3u8&#x27; from origin &#x27;http://site&#x27; has been blocked by CORS policy: The response is invalid.</span><br></pre></td></tr></table></figure>\n\n<p>知道通常情况下，HTTPS 引用 HTTP 的资源就会出现跨域错误，但今天我们的要求是允许它跨域，并且尽量保证它是基本安全的。</p>\n<p>在上周我测试过很多方案，最终使用的是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">add_header Content-Security-Policy &quot;upgrade-insecure-requests&quot;;</span><br></pre></td></tr></table></figure>\n\n<p>意思是将所有 HTTP 请求尽可能的转换成 HTTPS 请求，如果对方同时支持 HTTPS 和 HTTP 协议，那这没有任何问题，但如果对方只支持 HTTP，那这时候就会报错：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Refused to load the image &#x27;http://site/file.png&#x27;</span><br><span class=\"line\">because it violates the following Content Security Policy directive:</span><br></pre></td></tr></table></figure>\n\n<p>看到提示后直觉告诉我要去放行<code>img-src</code>和<code>media-src</code>，但当我去放行设置后，问题依旧，甚至还多出了错误。</p>\n<h3 id=\"Content-Security-Policy-内容安全策略\"><a href=\"#Content-Security-Policy-内容安全策略\" class=\"headerlink\" title=\"Content-Security-Policy 内容安全策略\"></a>Content-Security-Policy 内容安全策略</h3><p>内容安全策略（CSP）需要仔细调整和精确定义策略。如果启用，CSP 会对浏览器呈现页面的方式产生重大影响（例如，默认情况下禁用内联 JavaScript，并且必须在策略中明确允许）。CSP 可防止各种攻击，包括跨站点脚本和其他跨站点注入。</p>\n<h4 id=\"Values\"><a href=\"#Values\" class=\"headerlink\" title=\"Values\"></a>Values</h4><table>\n<thead>\n<tr>\n<th>Directive</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>base-uri</td>\n<td>Define the base uri for relative uri.</td>\n</tr>\n<tr>\n<td>default-src</td>\n<td>Define loading policy for all resources type in case of a resource type dedicated directive is not defined (fallback).</td>\n</tr>\n<tr>\n<td>script-src</td>\n<td>Define which scripts the protected resource can execute.</td>\n</tr>\n<tr>\n<td>object-src</td>\n<td>Define from where the protected resource can load plugins.</td>\n</tr>\n<tr>\n<td>style-src</td>\n<td>Define which styles (CSS) the user applies to the protected resource.</td>\n</tr>\n<tr>\n<td>img-src</td>\n<td>Define from where the protected resource can load images.</td>\n</tr>\n<tr>\n<td>media-src</td>\n<td>Define from where the protected resource can load video and audio.</td>\n</tr>\n<tr>\n<td>frame-src</td>\n<td>Deprecated and replaced by child-src. Define from where the protected resource can embed frames.</td>\n</tr>\n<tr>\n<td>child-src</td>\n<td>Define from where the protected resource can embed frames.</td>\n</tr>\n<tr>\n<td>frame-ancestors</td>\n<td>Define from where the protected resource can be embedded in frames.</td>\n</tr>\n<tr>\n<td>font-src</td>\n<td>Define from where the protected resource can load fonts.</td>\n</tr>\n<tr>\n<td>connect-src</td>\n<td>Define which URIs the protected resource can load using script interfaces.</td>\n</tr>\n<tr>\n<td>manifest-src</td>\n<td>Define from where the protected resource can load manifest.</td>\n</tr>\n<tr>\n<td>form-action</td>\n<td>Define which URIs can be used as the action of HTML form elements.</td>\n</tr>\n<tr>\n<td>sandbox</td>\n<td>Specifies an HTML sandbox policy that the user agent applies to the protected resource.</td>\n</tr>\n<tr>\n<td>script-nonce</td>\n<td>Define script execution by requiring the presence of the specified nonce on script elements.</td>\n</tr>\n<tr>\n<td>plugin-types</td>\n<td>Define the set of plugins that can be invoked by the protected resource by limiting the types of resources that can be embedded.</td>\n</tr>\n<tr>\n<td>reflected-xss</td>\n<td>Instructs a user agent to activate or deactivate any heuristics used to filter or block reflected cross-site scripting attacks, equivalent to the effects of the non-standard X-XSS-Protection header.</td>\n</tr>\n<tr>\n<td>block-all-mixed-content</td>\n<td>Prevent user agent from loading mixed content.</td>\n</tr>\n<tr>\n<td>upgrade-insecure-requests</td>\n<td>Instructs user agent to download insecure resources using HTTPS.</td>\n</tr>\n<tr>\n<td>referrer</td>\n<td>Define information user agent must send in Referer header.</td>\n</tr>\n<tr>\n<td>report-uri</td>\n<td>Specifies a URI to which the user agent sends reports about policy violation.</td>\n</tr>\n<tr>\n<td>report-to</td>\n<td>Specifies a group (defined in Report-To header) to which the user agent sends reports about policy violation.</td>\n</tr>\n</tbody></table>\n<h4 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h4><p><code>Content-Security-Policy: script-src &#39;self&#39;</code></p>\n<h4 id=\"在经过反复测试后\"><a href=\"#在经过反复测试后\" class=\"headerlink\" title=\"在经过反复测试后\"></a>在经过反复测试后</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">add_header Content-Security-Policy &quot;upgrade-insecure-requests;connect-src *&quot;;</span><br></pre></td></tr></table></figure>\n\n<p>解决了全部问题，即消除全部警告，同时兼容了各种协议资源。</p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CSP\">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CSP</a></li>\n<li><a href=\"https://www.owasp.org/index.php/OWASP_Secure_Headers_Project#csp\">https://www.owasp.org/index.php/OWASP_Secure_Headers_Project#csp</a></li>\n</ul>\n","categories":[{"name":"学习记录","path":"api/categories/学习记录.json"},{"name":"服务器","path":"api/categories/服务器.json"},{"name":"Nginx","path":"api/categories/Nginx.json"}],"tags":[{"name":"Nginx","path":"api/tags/Nginx.json"}]}