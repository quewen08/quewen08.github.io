{"name":"设计模式","postlist":[{"title":"23种设计模式总览","slug":"Design-Pattern-Introduction","date":"2018-04-22T04:22:22.000Z","updated":"2023-04-29T03:26:00.877Z","comments":null,"top":null,"path":"api/articles/Design-Pattern-Introduction.json","realPath":"/2018/Design-Pattern-Introduction/index/","excerpt":null,"keywords":"南山结庐,东篱先生","cover":"/img/java/2h6UCe.jpg","content":null,"raw":null,"categories":[{"name":"学习记录","path":"api/categories/学习记录.json"},{"name":"设计模式","path":"api/categories/设计模式.json"}],"tags":[{"name":"设计模式","path":"api/tags/设计模式.json"}]},{"title":"深入 Java 单例模式","slug":"Singleton-Pattern","date":"2018-04-18T06:22:22.000Z","updated":"2022-10-19T14:40:00.237Z","comments":null,"top":null,"path":"api/articles/Singleton-Pattern.json","realPath":"/2018/Singleton-Pattern/index/","excerpt":" [Figure] 在 GoF 的23种设计模式中，单例模式是比较简单的一种。然而，有时候越是简单的东西越容易出现问题。下面就单例设计模式详细的探讨一下。所谓单例模式，简单来说，就是在整个应用中保证只有一个类的实例存在。就像是 Java Web 中的 application，也就是提供了一个全局变量，用处相当广泛，比如：保存全局数据，实现全局性的操作等。","keywords":"南山结庐,东篱先生","cover":"/img/java/2h6EI6.jpg","content":null,"raw":null,"categories":[{"name":"学习记录","path":"api/categories/学习记录.json"},{"name":"设计模式","path":"api/categories/设计模式.json"}],"tags":[{"name":"设计模式","path":"api/tags/设计模式.json"},{"name":"单例模式","path":"api/tags/单例模式.json"}]},{"title":"设计模式之建造者模式","slug":"design-builder-pattern","date":"2023-04-29T03:29:48.000Z","updated":"2023-05-05T14:38:51.953Z","comments":null,"top":null,"path":"api/articles/design-builder-pattern.json","realPath":"/2023/design-builder-pattern/index/","excerpt":null,"keywords":"南山结庐,东篱先生","cover":null,"content":null,"raw":null,"categories":[{"name":"学习记录","path":"api/categories/学习记录.json"},{"name":"设计模式","path":"api/categories/设计模式.json"}],"tags":[{"name":"设计模式","path":"api/tags/设计模式.json"},{"name":"建造者模式","path":"api/tags/建造者模式.json"}]}]}